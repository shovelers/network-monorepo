<script type="module">
  if (window.__TAURI__) {
    document.getElementById("google-import").style.display = "none"
  }
  import { getProfile, updateCommunityProfile } from '/odd.js';
  window.updateCommunityProfile = updateCommunityProfile
  const options = JSON.parse('<%- JSON.stringify(optionsV1) %>')
  const communityDID = '<%- communityDID %>'
  const communityFile = JSON.parse('<%- communityFile %>')

  const badges = [...document.querySelectorAll('#edit-badge')]
  badges.forEach((badge) => {
    badge.addEventListener('click', () => {
      let isClicked = badge.getAttribute('data-is-clicked')
      let question = badge.getAttribute('question')
      if (isClicked === "false") {
        badge.classList.remove('badge-outline');
        badge.classList.add('badge-secondary');
        badge.setAttribute('data-is-clicked', true)
      } else {
        badge.classList.remove('badge-secondary');
        badge.classList.add('badge-outline');
        badge.setAttribute('data-is-clicked', false)
      }
    })
  })

  const updateProfileModal = function(result) {
    document.getElementById("profile-name").innerHTML = result.name
    document.getElementById("profile-handle").innerHTML = result.handle
    document.getElementById("profile-bio").innerHTML = result.text
    
    //Set deault color & Flips the colour of option pills and stores the resposes of respective question
    for (const key in options){
      var badges = Array.from(document.querySelectorAll(`#edit-badge[question=${key}]`))
      badges.forEach((badge) => {
        if (result[key] && result[key].includes(badge.innerHTML)) {
          badge.classList.remove('badge-outline');
          badge.classList.add('badge-secondary');
          badge.setAttribute('data-is-clicked', true)
        }
      })
    }
  }

  window.refreshProfile = function(){
    window.getProfile(communityDID).then((profile) => {

      const farcaster = profile.socials.find((p) => p.prodid == "farcaster")
      var result = {
        pfpUrl: farcaster.pfpUrl,
        handle: farcaster.username,
        name: farcaster.displayName,
        text: farcaster.bio
      }
      for (const key in options) { result[key] = profile.inputs[key] } 

    document.querySelector(".avatar > div > img").src = result.pfpUrl
    document.getElementById("handle").innerHTML = result.handle
    document.getElementById("name").innerHTML = "Name: " + result.name

    for (const key in options) {
      if (!result[key]) continue;
      document.getElementById(key).innerHTML = '';
      for (let values of result[key]) {
        if (values == '') continue;
        document.getElementById(key).innerHTML += `<span class="badge badge-md badge-secondary">${values}</span>`;
      }
    }
    updateProfileModal(result)
  })}
  refreshProfile();
  
  window.updateSelectedTagsToProfile = async function(){
    var params = {}
    for (const key in options) {
      params[key] = Array.from(document.querySelectorAll(`#edit-badge[question=${key}][data-is-clicked="true"]`)).map( e => e.innerHTML)
    }
    await updateCommunityProfile(params, communityDID, communityFile.profileSchema)
  }

  window.refreshSyncStatus = function() {
    window.shovel.agent.syncStatus().then((s) => {
      if (s == false) {
        document.getElementById("avatar").classList.remove('online');
        document.getElementById("avatar").classList.add('offline');
      } else if (s == true) {
        document.getElementById("avatar").classList.add('online');
        document.getElementById("avatar").classList.remove('offline');
      }
    })
    setTimeout(refreshSyncStatus, 10000);
  }
  setTimeout(refreshSyncStatus, 3000);

  window.syncButton = async function() {
    window.shovel.agent.syncStatus().then((s) => {
      console.log("sync status", s)
      if (s == false) {
        window.shovel.agent.push()
      }
    })
  }

  window.onTelegramAuth = async function (user) {
    //TODO: verify user.hash against the payload using VITE_TELEGRAM_BOT_TOKEN to verify the data is recieved from telegram

    console.log(JSON.stringify(user))
    await updateTelegramInfoInCommunityProfile(user, communityDID, communityFile.profileSchema)
  }
</script>

<div  id="avatar" class="max-md:flex max-md:justify-center max-md:items-center avatar online placeholder max-md:mx-20">    
  <div class="bg-neutral-focus rounded-full w-32">
    <img src=""/>
  </div>
</div>

<div class="flex justify-center items-center py-1">
  <div class="flex items-center space-x-2">
    <span id="handle" class="text-xl font-semibold ml-2" style="display: inline-block; max-width: 200px; overflow: hidden; text-overflow: ellipsis;"></span>
  </div>
</div>

<div id="name" class="py-1 text-left"></div>
<% for (const key in optionsV1) {%>
  <div class="text-left"><%= optionsV1[key]["label"] %> :</br><span class="space-x-1 space-y-1 py-1" id="<%= key %>"></span></div>
<% }%>

<div class="max-md:pt-2 md:absolute md:inset-x-0 md:bottom-0 md:pb-4 md:flex md:flex-col md:space-y-2 md:items-center">
  <button id="profile-edit-btn" class="btn max-md:my-1 btn-outline max-md:w-5/6 md:btn-sm md:w-2/3" onclick="profile_edit_modal.showModal()">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"> <path fill="currentColor" d="m13.498.795l.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057l3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z" /></svg>
    Edit Profile
  </button>
  <button id="connect-socials-btn" class="hidden btn max-md:my-1 btn-outline max-md:w-5/6 md:btn-sm md:w-2/3" onclick="connect_socials_modal.showModal()">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"> <path fill="currentColor" d="m13.498.795l.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057l3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z" /></svg>
    Connect Socials
  </button>
  <button id="sync-btn" class="btn max-md:my-1 btn-outline max-md:w-5/6 md:btn-sm md:w-2/3" onclick="syncButton()">
    <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M4 20v-2h2.75l-.4-.35q-1.225-1.225-1.787-2.662T4 12.05q0-2.775 1.663-4.937T10 4.25v2.1Q8.2 7 7.1 8.563T6 12.05q0 1.125.425 2.188T7.75 16.2l.25.25V14h2v6zm10-.25v-2.1q1.8-.65 2.9-2.212T18 11.95q0-1.125-.425-2.187T16.25 7.8L16 7.55V10h-2V4h6v2h-2.75l.4.35q1.225 1.225 1.788 2.663T20 11.95q0 2.775-1.662 4.938T14 19.75"/></svg>
    Sync
  </button>
  <button class="btn max-md:my-1 btn-outline max-md:w-5/6 md:btn-sm md:w-2/3" onclick="logout_modal.showModal()">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="currentColor" d="M11 1a2 2 0 0 0-2 2v4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h5V3a3 3 0 0 1 6 0v4a.5.5 0 0 1-1 0V3a2 2 0 0 0-2-2zM3 8a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1H3z" /></svg>
    Logout
  </button>
</div>

<dialog id="profile_edit_modal" class="modal">
  <div class="modal-box">
    <h3 class="font-semibold text-lg">Edit Profile</h3>
    <p class="text-xs font-light">âš¡ Changes will propogate automatically to all community directories</p>
    <div class="modal-action flex justify-center items-center">
      <form id="profile-updatae-form"
        onsubmit="event.preventDefault(); updateSelectedTagsToProfile().then(function(){refreshProfile()}); profile_edit_modal.close(); return false"
        class="space-y-1 text-center">
        <div class="font-semibold text-left">Name : <span id="profile-name" class="font-normal"></span></div>
        <div class="font-semibold text-left">Handle : <span id="profile-handle" class="font-normal"></span></div>
        <div class="font-semibold text-left">Bio : <span id="profile-bio" class="font-normal"></span></div>
        
        <div class="divider py-2"></div>
        
        <% for (const key in optionsV1) {%>
          <div class="space-y-2">
            <div class="font-semibold text-md"><%= optionsV1[key]["label"] %></div>
            <% for(var i=0; i<optionsV1[key]["symbols"].length; i++) {%>
              <div id="edit-badge" class="badge badge-lg badge-outline cursor-pointer" data-is-clicked="false" question="<%= key %>"><%= optionsV1[key]["symbols"][i] %></div>
            <% } %>
          </div> 
        <% }%>
        
        <div class="flex flex-row space-x-2 pt-4 justify-center">
          <button type="submit" class="btn btn-outline btn-sm">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><g fill="currentColor"><path d="M12 2h-2v3h2V2Z"/><path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0H1.5ZM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1H4ZM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1Z"/></g></svg>
          </button>
          <button class="btn btn-outline btn-sm" onclick="event.preventDefault(); profile_edit_modal.close();">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><g fill="currentColor"><path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/><path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8L4.646 5.354a.5.5 0 0 1 0-.708z"/></g></svg>
          </button>
        </div>
      </form>
    </div>
  </div>
</dialog>

<dialog id="connect_socials_modal" class="modal">
  <div class="modal-box">
   <div id="telegram-login">
     <script 
       async src="https://telegram.org/js/telegram-widget.js?22" 
       data-telegram-login="rolodexsocialbot" 
       data-size="large" 
       data-onauth="await onTelegramAuth(user)">
     </script>
   </div>
  </div>
</dialog>

<dialog id="logout_modal" class="modal">
  <div class="modal-box">
    <p class="text-lg font-bold">Note</p>
    <p class="text-sm">Sign-in with the same FC account/wallet the next time</p>
    <div class="modal-action flex flex-col justify-center items-center space-y-2">
      <form class="flex flex-col space-y-2 items-center" onsubmit="event.preventDefault(); signout().then(function(){window.location.href='/home'}) ;return false">
        <div class="flex flex-row space-x-2">
          <button type="submit" class="btn btn-outline btn-sm">
            Logout
          </button>
          <button class="btn btn-outline btn-sm" formmethod="dialog" onclick="event.preventDefault(); logout_modal.close()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><g fill="currentColor"><path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/><path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8L4.646 5.354a.5.5 0 0 1 0-.708z"/></g></svg>
          </button>
        </div>
      </form>
    </div>
  </div>
</dialog>